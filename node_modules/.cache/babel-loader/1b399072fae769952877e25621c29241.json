{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacowan87/thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport ShowTimeRemaining from \"./ShowTimeRemaining\";\nimport SessionTitle from \"./SessionTitle\";\nimport Pause from \"./Pause\";\nimport ProgressBar from \"./ProgressBar\";\nimport Audio from \"./Audio\";\nimport ModifyDurationButtons from \"./ModifyDurationButtons\";\n\nfunction Pomodoro() {\n  // State variables\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [isStopped, setIsStopped] = useState(true);\n  const [onBreak, setOnBreak] = useState(false);\n  const [focusTime, setFocusTime] = useState(25);\n  const [breakTime, setBreakTime] = useState(5);\n  const [focusRun, setFocusRun] = useState(focusTime * 60);\n  const [breakRun, setBreakRun] = useState(breakTime * 60);\n  const [ariaValue, setAriaValue] = useState(0); // Modify focus and break time\n\n  function increaseFocus() {\n    setFocusTime(focusTime + 5);\n    setFocusRun((focusTime + 5) * 60);\n  }\n\n  const decreaseFocus = () => {\n    setFocusTime(focusTime - 5);\n    setFocusRun((focusTime - 5) * 60);\n  };\n\n  const increaseBreak = () => {\n    setBreakTime(breakTime + 1);\n    setBreakRun((breakTime + 1) * 60);\n  };\n\n  const decreaseBreak = () => {\n    setBreakTime(breakTime - 1);\n    setBreakRun((breakTime - 1) * 60);\n  }; // Stop Handler\n\n\n  const stopHandler = () => {\n    setIsTimerRunning(false);\n    setOnBreak(false);\n    setFocusTime(25);\n    setBreakTime(5);\n    setFocusRun(focusTime * 60);\n    setBreakRun(breakTime * 60);\n    setIsStopped(true);\n  }; // Session Handler\n\n\n  const runSession = () => {\n    if (focusRun > 0) {\n      setFocusRun(prevCount => prevCount - 1);\n    } else {\n      setOnBreak(true);\n\n      if (breakRun === breakTime * 60) {\n        {\n          Audio;\n        }\n        console.log(\"Switching to break time\");\n        setBreakRun(prevCount => prevCount - 1);\n      }\n\n      if (breakRun > 0) {\n        setBreakRun(prevCount => prevCount - 1);\n      }\n\n      if (focusRun === 0 && breakRun === 0) {\n        {\n          Audio;\n        }\n        console.log(\"Restarting Timer\");\n        setOnBreak(false);\n        setFocusRun(focusTime * 60);\n        setBreakRun(breakTime * 60);\n      }\n    } // progress bar values\n\n\n    if (!onBreak) {\n      setAriaValue(100 * (focusTime * 60 - focusRun) / (focusTime * 60));\n    } else {\n      setAriaValue(100 * (breakTime * 60 - breakRun) / (breakTime * 60));\n    }\n  };\n\n  useInterval(() => {\n    runSession();\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setIsStopped(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModifyDurationButtons, {\n    increaseFocus: increaseFocus,\n    decreaseFocus: decreaseFocus,\n    increaseBreak: increaseBreak,\n    decreaseBreak: decreaseBreak,\n    isTimerRunning: isTimerRunning,\n    focusTime: focusTime,\n    breakTime: breakTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stopHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"session-title\",\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SessionTitle, {\n    onBreak: onBreak,\n    focusTime: focusTime,\n    breakTime: breakTime,\n    isStopped: isStopped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ShowTimeRemaining, {\n    onBreak: onBreak,\n    focusRun: focusRun,\n    breakRun: breakRun,\n    isStopped: isStopped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 14\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pause, {\n    isTimerRunning: isTimerRunning,\n    focusRun: focusRun,\n    focusTime: focusTime,\n    breakRun: breakRun,\n    breakTime: breakTime,\n    isStopped: isStopped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    ariaValue: ariaValue,\n    isStopped: isStopped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/joshuacowan87/thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","ShowTimeRemaining","SessionTitle","Pause","ProgressBar","Audio","ModifyDurationButtons","Pomodoro","isTimerRunning","setIsTimerRunning","isStopped","setIsStopped","onBreak","setOnBreak","focusTime","setFocusTime","breakTime","setBreakTime","focusRun","setFocusRun","breakRun","setBreakRun","ariaValue","setAriaValue","increaseFocus","decreaseFocus","increaseBreak","decreaseBreak","stopHandler","runSession","prevCount","console","log","playPause","prevState","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport ShowTimeRemaining from \"./ShowTimeRemaining\";\nimport SessionTitle from \"./SessionTitle\";\nimport Pause from \"./Pause\";\nimport ProgressBar from \"./ProgressBar\";\nimport Audio from \"./Audio\"\nimport ModifyDurationButtons from \"./ModifyDurationButtons\"\n\n\nfunction Pomodoro() {\n  \n// State variables\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [isStopped, setIsStopped] = useState(true);\n  const [onBreak, setOnBreak] = useState(false);\n  const [focusTime, setFocusTime] = useState(25);\n  const [breakTime, setBreakTime] = useState(5);\n  const [focusRun, setFocusRun] = useState(focusTime * 60);\n  const [breakRun, setBreakRun] = useState(breakTime * 60);\n  const [ariaValue, setAriaValue] = useState(0)\n  \n\n \n// Modify focus and break time\n function increaseFocus() {\n  setFocusTime(focusTime + 5);\n  setFocusRun((focusTime + 5)*60);}\nconst decreaseFocus = () => {\n  setFocusTime(focusTime - 5);\n  setFocusRun((focusTime - 5)*60)}\nconst increaseBreak = () => {\n  setBreakTime(breakTime + 1)\n  setBreakRun((breakTime + 1)*60)}\nconst decreaseBreak = () => {\n  setBreakTime(breakTime - 1)\n  setBreakRun((breakTime - 1)*60)}\n\n// Stop Handler\nconst stopHandler = () => { \n  setIsTimerRunning(false)\n  setOnBreak(false) \n  setFocusTime(25)\n  setBreakTime(5)\n  setFocusRun(focusTime * 60)\n  setBreakRun(breakTime * 60)\n  setIsStopped(true)\n}\n\n// Session Handler\nconst runSession = () => {\n  if (focusRun > 0) {    \n    setFocusRun((prevCount) => prevCount - 1);  \n  }\n  else { \n    setOnBreak(true);\n      if (breakRun === breakTime*60) {\n  {Audio}\n    console.log(\"Switching to break time\");\n    setBreakRun((prevCount) => prevCount -1)\n    }\n    if (breakRun > 0) {\n       setBreakRun((prevCount) => prevCount -1)\n    }\n    if (focusRun === 0 && breakRun === 0) {\n    {Audio}\n    console.log(\"Restarting Timer\")\n    setOnBreak(false);\n    setFocusRun(focusTime * 60);\n    setBreakRun(breakTime * 60);    \n    }\n  }\n            // progress bar values\n  if (!onBreak) {\n   setAriaValue(100*(focusTime * 60 - focusRun)/(focusTime*60))\n } \n  else {setAriaValue(100*(breakTime * 60 - breakRun)/(breakTime*60))\n       }\n}\n\n\n\n  useInterval(() => {\n      runSession();\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    setIsStopped(false)\n  }\n\n  return (\n    <div className=\"pomodoro\">\n {/* Modify Duration Buttons*/}     \n      <div>\n        <ModifyDurationButtons \n        increaseFocus={increaseFocus}\n        decreaseFocus={decreaseFocus}\n        increaseBreak={increaseBreak}\n        decreaseBreak={decreaseBreak}\n        isTimerRunning={isTimerRunning}\n        focusTime={focusTime}\n        breakTime={breakTime} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n{/* Play/Pause Button */}            \n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n{/* Stop Button     */}      \n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopHandler}>\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>     \n      <div>        \n        <div className=\"row mb-2\">\n          <div data-testid=\"session-title\" className=\"col\">        \n\n {/* Session Title       */}\n              <SessionTitle\n               onBreak={onBreak}\n               focusTime={focusTime}\n               breakTime={breakTime}\n               isStopped={isStopped}/>\n          </div>\n\n{/* TimeRemaining  */}\n          <div>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n             <ShowTimeRemaining \n               onBreak={onBreak}\n               focusRun={focusRun}\n               breakRun={breakRun} \n               isStopped={isStopped}/>     \n            </p>\n          </div>\n        </div>\n\n{/* Pause Sign */}        \n        <div>\n          <Pause \n            isTimerRunning={isTimerRunning}\n            focusRun={focusRun}\n            focusTime={focusTime}\n            breakRun={breakRun}\n            breakTime={breakTime}\n            isStopped={isStopped}\n            />     \n        </div>\n        <div>\n\n {/* Progress Bar */}       \n            <ProgressBar\n              ariaValue={ariaValue}\n              isStopped={isStopped}    \n              />\n     \n      </div>\n    </div>\n   </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}