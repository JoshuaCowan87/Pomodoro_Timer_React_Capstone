{"version":3,"sources":["utils/duration/index.js","pomodoro/ShowTimeRemaining.js","pomodoro/SessionTitle.js","pomodoro/Pause.js","pomodoro/ProgressBar.js","pomodoro/ModifyDurationButtons.js","pomodoro/Pomodoro.js","utils/class-names/index.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","ShowTimeRemaining","focusRun","breakRun","onBreak","isStopped","SessionTitle","focusTime","breakTime","Pause","isTimerRunning","className","id","ProgressBar","ariaValue","role","aria-valuemin","aria-valuemax","aria-valuenow","style","width","ModifyDurationButtons","increaseFocus","decreaseFocus","increaseBreak","decreaseBreak","data-testid","type","onClick","disabled","Pomodoro","classNameToBoolean","useState","setIsTimerRunning","setIsStopped","setOnBreak","setFocusTime","setBreakTime","setFocusRun","setBreakRun","setAriaValue","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","prevCount","Audio","play","console","log","aria-label","title","prevState","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a67a7599.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import {secondsToDuration} from \"../utils/duration/index\";\n\nconst ShowTimeRemaining = ({focusRun, breakRun, onBreak, isStopped}) => {\n    if (isStopped) {\n      return null\n    }\n  else {\n     if (!onBreak) {\n     return `${secondsToDuration(focusRun)} remaining`     \n   }\n    else {\n       return `${secondsToDuration(breakRun)} remaining`\n              }\n  }  \n}\n\n\nexport default ShowTimeRemaining;","import {minutesToDuration} from \"../utils/duration/index\";\n\n\nconst SessionTitle = ({onBreak, focusTime, breakTime, isStopped}) => {\n  if (isStopped) return null\n  else {\n  if (!onBreak) {\n    return `Focusing for ${minutesToDuration(focusTime)} minutes`\n  }\n  else {\n    return `On Break for ${minutesToDuration(breakTime)} minutes`\n  }\n  }\n}\n\n\nexport default SessionTitle","import React from \"react\";\n\nconst Pause = ({isTimerRunning, focusRun, focusTime, breakRun, breakTime, isStopped}) => {\n  if (isStopped) return null\n  else {\n if (!isTimerRunning) {\n   return (\n     <div className=\"row mb-2 d-block\" id=\"paused\">\n        <div className=\"col\">\n          <h3>PAUSED</h3>\n        </div>\n      </div>\n   )\n }\n  else return null\n}\n}\n\n\n\nexport default Pause","import React from \"react\";\n\nconst ProgressBar = ({ariaValue, isStopped}) => {\n  if (isStopped) return null \n  else {\n  return (\n      <div className=\"row mb-2\">\n    <div className=\"col\">\n  <div className=\"progress\">\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={ariaValue}\n                style={{ width: `${ariaValue}%`}}\n              />  \n \n            </div>\n          </div>\n      </div>\n   )\n\n}\n}\n\nexport default ProgressBar;","import {minutesToDuration} from \"../utils/duration/index\";\nimport React from \"react\";\n\nconst ModifyDurationButtons = ({breakTime, focusTime, increaseFocus, decreaseFocus, increaseBreak, decreaseBreak, isTimerRunning}) => {\n\n    return (\n        \n        <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              Focus Duration: {minutesToDuration(focusTime)}\n            </span>\n            <div className=\"input-group-append\">\n{/*decrease Focus*/}             \n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={decreaseFocus}\n                disabled={isTimerRunning || focusTime === 5}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n{/*increase Focus*/}              \n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={increaseFocus}\n                disabled={isTimerRunning || focusTime === 60}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                \n                Break Duration: {minutesToDuration(breakTime)}\n              </span>\n              <div className=\"input-group-append\">\n{/*decrease break*/}               \n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={decreaseBreak}\n                  disabled={isTimerRunning || breakTime === 1}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n{/*increase break*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={increaseBreak}\n                   disabled={isTimerRunning || breakTime === 15}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\n\nexport default ModifyDurationButtons;","import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport ShowTimeRemaining from \"./ShowTimeRemaining\";\nimport SessionTitle from \"./SessionTitle\";\nimport Pause from \"./Pause\";\nimport ProgressBar from \"./ProgressBar\";\nimport ModifyDurationButtons from \"./ModifyDurationButtons\"\n\n\nfunction Pomodoro() {\n  \n// State variables\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [isStopped, setIsStopped] = useState(true);\n  const [onBreak, setOnBreak] = useState(false);\n  const [focusTime, setFocusTime] = useState(25);\n  const [breakTime, setBreakTime] = useState(5);\n  const [focusRun, setFocusRun] = useState(focusTime * 60);\n  const [breakRun, setBreakRun] = useState(breakTime * 60);\n  const [ariaValue, setAriaValue] = useState(0)\n  \n\n \n// Modify focus and break time\n function increaseFocus() {\n  setFocusTime(focusTime + 5);\n  setFocusRun((focusTime + 5)*60);}\nconst decreaseFocus = () => {\n  setFocusTime(focusTime - 5);\n  setFocusRun((focusTime - 5)*60)}\nconst increaseBreak = () => {\n  setBreakTime(breakTime + 1)\n  setBreakRun((breakTime + 1)*60)}\nconst decreaseBreak = () => {\n  setBreakTime(breakTime - 1)\n  setBreakRun((breakTime - 1)*60)}\n\n// Stop Handler\nconst stopHandler = () => { \n  setIsTimerRunning(false)\n  setOnBreak(false) \n  setFocusTime(25)\n  setBreakTime(5)\n  setFocusRun(focusTime * 60)\n  setBreakRun(breakTime * 60)\n  setIsStopped(true)\n}\n\n// Session Handler\nconst runSession = () => {\n  if (focusRun > 0) {    \n    setFocusRun((prevCount) => prevCount - 1);  \n  }\n  else { \n    setOnBreak(true);\n      if (breakRun === breakTime*60) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n    console.log(\"Switching to break time\");\n    setBreakRun((prevCount) => prevCount -1)\n    }\n    if (breakRun > 0) {\n       setBreakRun((prevCount) => prevCount -1)\n    }\n    if (focusRun === 0 && breakRun === 0) {\n    new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n    console.log(\"Restarting Timer\")\n    setOnBreak(false);\n    setFocusRun(focusTime * 60);\n    setBreakRun(breakTime * 60);    \n    }\n  }\n            // progress bar values\n  if (!onBreak) {\n   setAriaValue(100*(focusTime * 60 - focusRun)/(focusTime*60))\n } \n  else {setAriaValue(100*(breakTime * 60 - breakRun)/(breakTime*60))\n       }\n}\n\n\n\n  useInterval(() => {\n      runSession();\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    setIsStopped(false)\n  }\n\n  return (\n    <div className=\"pomodoro\">\n {/* Modify Duration Buttons*/}     \n      <div>\n        <ModifyDurationButtons \n        increaseFocus={increaseFocus}\n        decreaseFocus={decreaseFocus}\n        increaseBreak={increaseBreak}\n        decreaseBreak={decreaseBreak}\n        isTimerRunning={isTimerRunning}\n        focusTime={focusTime}\n        breakTime={breakTime} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n{/* Play/Pause Button */}            \n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n{/* Stop Button     */}      \n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopHandler}>\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>     \n      <div>        \n        <div className=\"row mb-2\">\n          <div data-testid=\"session-title\" className=\"col\">        \n\n {/* Session Title       */}\n              <SessionTitle\n               onBreak={onBreak}\n               focusTime={focusTime}\n               breakTime={breakTime}\n               isStopped={isStopped}/>\n          </div>\n\n{/* TimeRemaining  */}\n          <div>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n             <ShowTimeRemaining \n               onBreak={onBreak}\n               focusRun={focusRun}\n               breakRun={breakRun} \n               isStopped={isStopped}/>     \n            </p>\n          </div>\n        </div>\n\n{/* Pause Sign */}        \n        <div>\n          <Pause \n            isTimerRunning={isTimerRunning}\n            focusRun={focusRun}\n            focusTime={focusTime}\n            breakRun={breakRun}\n            breakTime={breakTime}\n            isStopped={isStopped}\n            />     \n        </div>\n        <div>\n\n {/* Progress Bar */}       \n            <ProgressBar\n              ariaValue={ariaValue}\n              isStopped={isStopped}    \n              />\n     \n      </div>\n    </div>\n   </div>\n  );\n}\n\nexport default Pomodoro;\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}